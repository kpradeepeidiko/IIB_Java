/*
	This code is used to handle exception handling for all flows
*/

CREATE COMPUTE MODULE Common_ExceptionHandler
	DECLARE envarea REFERENCE TO Environment;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE TIMESTAMP_FORMAT CHARACTER 'yyyy-MM-dd''T''HH:mm:ss.SSSSSS';
		DECLARE ccsid INTEGER 1208;
		CALL getFlowDetails(InputRoot);
		
		SET Environment.variables.TraceFileExc.ExceptionDate=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT TIMESTAMP_FORMAT);
		CALL originalMsg(ccsid, InputRoot);
		SET Environment.variables.TraceFileExc.exceptionDesc=getExceptionDesc(InputRoot, OutputRoot, InputExceptionList);
		CALL buildExceptionXML();
		RETURN TRUE;
	END;
	CREATE PROCEDURE originalMsg (IN ccsid INTEGER, IN InputRoot REFERENCE)
	BEGIN
		--If error occurs capture the original message
		DECLARE domainFldName CHARACTER FIELDNAME(InputBody);
		IF domainFldName='MRM' THEN
			SET Environment.variables.TraceFileExc.originalMessage=InputRoot.MRM;
		ELSEIF domainFldName='XMLNSC' THEN
			SET Environment.variables.TraceFileExc.originalMessage=CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID ccsid) AS CHARACTER CCSID ccsid);
		ELSEIF domainFldName='SOAP' THEN
			SET Environment.variables.TraceFileExc.originalMessage=CAST(ASBITSTREAM(InputRoot.SOAP CCSID ccsid) AS CHARACTER CCSID ccsid);
		ELSEIF domainFldName='BLOB' THEN
			SET Environment.variables.TraceFileExc.originalMessage=CAST(ASBITSTREAM(InputRoot.BLOB CCSID ccsid) AS CHARACTER CCSID ccsid);
		END IF;
	END;
	
	CREATE PROCEDURE buildExceptionXML()
       BEGIN 
       	SET OutputRoot.XMLNSC.TraceFileExc.FlowName = Environment.variables.TraceFileExc.FlowName;
       	--SET OutputRoot.XMLNSC.TraceFileExc.NodeName = Environment.Variables.TraceFileExc.NodeName;
       	SET OutputRoot.XMLNSC.TraceFileExc.ExceptionDate = Environment.variables.TraceFileExc.ExceptionDate;
       	SET OutputRoot.XMLNSC.TraceFileExc.originalMessage = Environment.variables.TraceFileExc.originalMessage;
       	SET OutputRoot.XMLNSC.TraceFileExc.exceptionDesc = Environment.variables.TraceFileExc.exceptionDesc;
       	SET OutputRoot.XMLNSC.TraceFileExc.NodeName = BrokerName;
       	SET OutputRoot.XMLNSC.TraceFileExc.ApplicationName = ApplicationLabel;
    END;
	
	--CALL buildExceptionXML(); --Build XML with Exception details
--	CREATE PROCEDURE buildExceptionXML ( )
--    BEGIN
--        
--        SET OutputRoot.XMLNSC.EXCDESC.B_EX_NAME=envarea.Errotype;
--        SET OutputRoot.XMLNSC.EXCDESC.B_EX_DATE=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ss.SSSSSS');
--        --SET OutputRoot.XMLNSC.EXCDESC.B_EX_DESC=SUBSTRING(envarea.ErrorText FROM 1 FOR 200);
----        SET OutputRoot.XMLNSC.EXCDESC.B_EX_DESC = InputExceptionList.RecoverableException.MessageException.Text;
--        SET OutputRoot.XMLNSC.EXCDESC.B_EX_DESC = envarea.ErrorText;
--        SET OutputRoot.XMLNSC.EXCDESC.B_NAME=BrokerName;
--        SET OutputRoot.XMLNSC.EXCDESC.B_FLOW_NAME=MessageFlowLabel;
--        SET OutputRoot.XMLNSC.EXCDESC.B_MSG_ID=Environment.Logging.correlationId;
--        SET OutputRoot.XMLNSC.EXCDESC.B_TRAN_REQ_ID=Environment.Logging.transactionRefId;
--        SET OutputRoot.XMLNSC.EXCDESC.B_APPLICATION_NAME=ApplicationLabel;
--        SET OutputRoot.XMLNSC.EXCDESC.B_EX_CREATION_DT=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ss.SSSSSS');
--        SET OutputRoot.XMLNSC.EXCDESC.REMOTE_IP_ADD=Environment.Logging.remoteIP;
--        SET OutputRoot.XMLNSC.EXCDESC.CH_CODE=Environment.Logging.chCode;
--    END;

	CREATE PROCEDURE getFlowDetails(IN InputRoot REFERENCE)
	BEGIN
		--Taking messge flow details
		--Taking message flow name , node name
		DECLARE nodeName CHARACTER;
		DECLARE label CHARACTER;
		DECLARE flowName, flowNameone,flowNametwo CHARACTER;
		DECLARE fieldPosition INTEGER;
		DECLARE excListRef REFERENCE TO InputExceptionList.*[1];
		SET label = excListRef.Label;
		SET flowNameone = excListRef.Name;
		SET fieldPosition = POSITION('.' IN label);
		SET flowNametwo=SUBSTRING(flowNameone AFTER '.');
		IF flowNametwo='' THEN
			SET flowName=SUBSTRING(flowNameone BEFORE '#');
		ELSE
			SET flowName=SUBSTRING(flowNametwo BEFORE '#');
		END IF;
		SET nodeName=SUBSTRING(label FROM (fieldPosition+1));
		SET Environment.variables.TraceFileExc.FlowName=flowName;
		SET Environment.variables.TraceFileExc.NodeName=nodeName;
	END;
END MODULE;

CREATE PROCEDURE getExceptionDesc (IN InputRoot REFERENCE, IN OutputRoot REFERENCE, IN InputExceptionList REFERENCE)
RETURNS CHAR
BEGIN
 --Copy the exception description
 DECLARE continueLoop BOOLEAN;
 DECLARE inRefName,inRefValue CHARACTER;
 DECLARE flag INTEGER 0;
 DECLARE inRef REFERENCE TO InputRoot;
 DECLARE outRef REFERENCE TO OutputRoot;
 DECLARE exceptionData CHAR;
 SET continueLoop  =  TRUE;
 MOVE inRef TO InputExceptionList;
 WHILE continueLoop DO
  IF CARDINALITY(inRef.RecoverableException[])  =  0 THEN
   SET continueLoop  =  FALSE;
  ELSE
   MOVE inRef TO inRef.RecoverableException[1];
  END IF;
 END WHILE;
 DECLARE messageText CHARACTER;
 DECLARE inRef2 REFERENCE TO InputExceptionList;
 DECLARE insertRef REFERENCE TO InputExceptionList;
 WHILE lastmove(inRef2) DO
  IF inRef2.Number is not null THEN
          SET messageText  =  inRef2.Text;
          SET insertRef = inRef2.Insert[>];
          WHILE LASTMOVE(insertRef) DO    --- fetch description from Insert[] 
           SET messageText = messageText ||'  '||insertRef.Text;
              MOVE insertRef NEXTSIBLING;
          END WHILE;
    END IF;
  move inRef2 lastchild;
 END WHILE;
 SET messageText = messageText||'    ' || inRef2;
 CREATE LASTCHILD OF OutputRoot AS outRef DOMAIN 'XMLNS';
 CREATE LASTCHILD OF OutputRoot.XMLNS AS outRef NAME 'ExceptionText';
 IF (LENGTH(inRef.[<].Text) = 0) THEN
  SET inRefName =  FIELDNAME(inRef);
  SET inRefValue =  FIELDVALUE(inRef.Text);
  SET outRef.ExceptionText  =  FIELDNAME(inRef)||'  :'||'  '||FIELDVALUE(inRef.Text);
 ELSE
  SET inRefName =  FIELDNAME(inRef);
  SET inRefValue =  FIELDVALUE(inRef.Text);
  SET outRef.ExceptionText  =  FIELDNAME(inRef.[<])||'  :'||'  '||FIELDVALUE(inRef.[<].Text);
 END IF;
 --SET exceptionData = inRefName||' '||inRefValue;
   
 SET exceptionData = inRefName||' '||inRefValue||' '||messageText;
 

 SET OutputRoot.XMLNS  =  NULL;
 RETURN exceptionData;
END;



