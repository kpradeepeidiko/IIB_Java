CREATE COMPUTE MODULE Set_Output_Result
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		--SET OutputRoot.XMLNSC.XMLMsg.Header.FN = InputRoot.DFDL.CSVMesg.header.First_Name;
		--SET OutputRoot.XMLNSC.XMLMsg.Header.MN = InputRoot.DFDL.CSVMesg.header.Middle_name;
		--SET OutputRoot.XMLNSC.XMLMsg.Header.LN = InputRoot.DFDL.CSVMesg.header.Last_Name;
		--DECLARE i INTEGER 1;
		--DECLARE j INTEGER;
		--SET j = CARDINALITY(InputRoot.DFDL.CSVMesg.record[]);
		--WHILE i <= j DO
			--SET OutputRoot.XMLNSC.XMLMsg.Record[i].FirstName = InputRoot.DFDL.CSVMesg.record[i].field1;
			--SET OutputRoot.XMLNSC.XMLMsg.Record[i].MiddleName = InputRoot.DFDL.CSVMesg.record[i].field2;
			--SET OutputRoot.XMLNSC.XMLMsg.Record[i].LastName = InputRoot.DFDL.CSVMesg.record[i].field3;
			--SET i = i + 1;
		--END WHILE;
		
		DECLARE refH REFERENCE TO InputRoot.DFDL.CSVMesg.header;
		DECLARE refR REFERENCE TO InputRoot.DFDL.CSVMesg.record[>];
				
		DECLARE outRef,outRef1 REFERENCE TO OutputRoot.XMLNSC;
		
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS outRef NAME 'Result';
		
		SET outRef.Header.FirstName = refH.First_Name;
		SET outRef.Header.MiddleName = refH.Middle_name;
		SET outRef.Header.LastName = refH.Last_Name;
		
		WHILE LASTMOVE(refR) DO
			CREATE LASTCHILD OF outRef AS outRef1 NAME 'Record';
			SET outRef1.FN = refR.field1;
			SET outRef1.MN = refR.field2;
			SET outRef1.LN = refR.field3;
			MOVE refR NEXTSIBLING;
		END WHILE;
		
	END;
END MODULE;
